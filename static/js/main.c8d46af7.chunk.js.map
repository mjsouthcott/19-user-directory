{"version":3,"sources":["components/Wrapper/index.js","components/Jumbotron/index.js","components/Table/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","className","children","Jumbotron","to","require","Table","sortColumn","useState","users","usersSubset","setUsersSubset","filterColumn","sortOrder","filterValue","setSortColumn","value","console","log","setSortOrder","compareRank","a","b","rankA","rank","rankB","comparison","compareFirstName","firstNameA","first_name","firstNameB","compareLastName","lastNameA","last_name","lastNameB","compareOccupation","occupationA","occupation","occupationB","compareSection","sectionA","section","sectionB","comparePosition","positionA","position","positionB","compareYearsOfService","parseInt","years_of_service","compareId","id","setFilterColumn","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","sortedUsers","sort","aria-describedby","placeholder","filterValueInput","document","getElementById","title","filteredUsers","filter","user","scope","map","src","rank_badge","alt","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8kIAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,MCQ1BC,MATf,SAAoBH,GAClB,OACE,yBAAKC,UAAU,aACb,wBAAIA,UAAU,aAAd,sCACA,uBAAGA,UAAU,QAAb,+E,+BCJAG,EAAKC,EAAQ,IAqSJC,MAnSf,SAAgBN,GAAQ,IAElBO,EAFiB,EACiBC,mBAASC,GAD1B,mBACdC,EADc,KACDC,EADC,KAELC,EAAe,KAC3BC,EAAY,MACZC,EAAc,GAElB,SAASC,EAAeC,GACtBT,EAAaS,EACbC,QAAQC,IAAIX,GAGd,SAASY,EAAcH,GACrBH,EAAYG,EACZC,QAAQC,IAAIL,GAGd,SAASO,EAAaC,EAAGC,GACvB,IAAMC,EAAQF,EAAEG,KACVC,EAAQH,EAAEE,KACZE,EAAa,EAMjB,OALIH,EAAQE,EACVC,EAAa,EACJH,EAAQE,IACjBC,GAAc,GAEE,QAAdb,EAA4Ba,EACT,SAAdb,GAA2C,EAAda,OAAjC,EAGP,SAASC,EAAkBN,EAAGC,GAC5B,IAAMM,EAAaP,EAAEQ,WACfC,EAAaR,EAAEO,WACjBH,EAAa,EAMjB,OALIE,EAAaE,EACfJ,EAAa,EACJE,EAAaE,IACtBJ,GAAc,GAEE,QAAdb,EAA4Ba,EACT,SAAdb,GAA2C,EAAda,OAAjC,EAGP,SAASK,EAAiBV,EAAGC,GAC3B,IAAMU,EAAYX,EAAEY,UACdC,EAAYZ,EAAEW,UAChBP,EAAa,EAMjB,OALIM,EAAYE,EACdR,EAAa,EACJM,EAAYE,IACrBR,GAAc,GAEE,QAAdb,EAA4Ba,EACT,SAAdb,GAA2C,EAAda,OAAjC,EAGP,SAASS,EAAmBd,EAAGC,GAC7B,IAAMc,EAAcf,EAAEgB,WAChBC,EAAchB,EAAEe,WAClBX,EAAa,EAMjB,OALIU,EAAcE,EAChBZ,EAAa,EACJU,EAAcE,IACvBZ,GAAc,GAEE,QAAdb,EAA4Ba,EACT,SAAdb,GAA2C,EAAda,OAAjC,EAGP,SAASa,EAAgBlB,EAAGC,GAC1B,IAAMkB,EAAWnB,EAAEoB,QACbC,EAAWpB,EAAEmB,QACff,EAAa,EAMjB,OALIc,EAAWE,EACbhB,EAAa,EACJc,EAAWE,IACpBhB,GAAc,GAEE,QAAdb,EAA4Ba,EACT,SAAdb,GAA2C,EAAda,OAAjC,EAGP,SAASiB,EAAiBtB,EAAGC,GAC3B,IAAMsB,EAAYvB,EAAEwB,SACdC,EAAYxB,EAAEuB,SAChBnB,EAAa,EAMjB,OALIkB,EAAYE,EACdpB,EAAa,EACJkB,EAAYE,IACrBpB,GAAc,GAEE,QAAdb,EAA4Ba,EACT,SAAdb,GAA2C,EAAda,OAAjC,EAGP,SAASqB,EAAuB1B,EAAGC,GACjC,MAAkB,QAAdT,EAA4BmC,SAAS3B,EAAE4B,kBAAoBD,SAAS1B,EAAE2B,kBACnD,SAAdpC,EAA6BmC,SAAS1B,EAAE2B,kBAAoBD,SAAS3B,EAAE4B,uBAA3E,EAGP,SAASC,EAAW7B,EAAGC,GACrB,MAAkB,QAAdT,EAA4BmC,SAAS3B,EAAE8B,IAAMH,SAAS1B,EAAE6B,IACrC,SAAdtC,EAA6BmC,SAAS1B,EAAE6B,IAAMH,SAAS3B,EAAE8B,SAA7D,EAuCP,SAASC,EAAiBpC,GACxBJ,EAAeI,EACfC,QAAQC,IAAIN,GAuCd,OACE,yBAAKX,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,sCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,oCAAoCoD,KAAK,SAASF,GAAG,qBAAqBG,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAtJ,UAGA,yBAAKvD,UAAU,gBAAgBwD,kBAAgB,sBAC7C,4BAAQxD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,QAA7E,gBACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,UAA7E,QACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,eAA7E,cACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,cAA7E,aACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,gBAA7E,cACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,aAA7E,WACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,cAA7E,YACA,4BAAQd,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAM3C,EAAc,oBAA7E,sBAGJ,yBAAKd,UAAU,YACb,4BAAQA,UAAU,oCAAoCoD,KAAK,SAASF,GAAG,qBAAqBG,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAtJ,SAGA,yBAAKvD,UAAU,gBAAgBwD,kBAAgB,sBAC7C,4BAAQxD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMvC,EAAa,SAA5E,uBACA,4BAAQlB,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMvC,EAAa,UAA5E,gBAGJ,4BAAQlB,UAAU,oBAAoBoD,KAAK,SAASK,QAAS,kBAjH3E,WACE,IAAIC,EAAc,GAElB,OAAQpD,GACN,IAAK,OACHoD,EAAclD,EAAMmD,KAAKxC,GACzB,MACF,IAAK,YACHuC,EAAclD,EAAMmD,KAAKjC,GACzB,MACF,IAAK,WACHgC,EAAclD,EAAMmD,KAAK7B,GACzB,MACF,IAAK,aACH4B,EAAclD,EAAMmD,KAAKzB,GACzB,MACF,IAAK,UACHwB,EAAclD,EAAMmD,KAAKrB,GACzB,MACF,IAAK,WACHoB,EAAclD,EAAMmD,KAAKjB,GACzB,MACF,IAAK,iBACHgB,EAAclD,EAAMmD,KAAKb,GACzB,MACF,QACEY,EAAclD,EAAMmD,KAAKV,GAK7BjC,QAAQC,IAAIyC,GAEZhD,EAAe,YAAIgD,IAgF4DC,KAAnE,WAIN,yBAAK3D,UAAU,UACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,wCAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,oCAAoCoD,KAAK,SAASF,GAAG,qBAAqBG,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAtJ,UAGA,yBAAKvD,UAAU,gBAAgBwD,kBAAgB,sBAC7C,4BAAQxD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,QAA/E,gBACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,UAA/E,QACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,eAA/E,cACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,cAA/E,aACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,gBAA/E,cACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,aAA/E,WACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,cAA/E,YACA,4BAAQnD,UAAU,gBAAgBoD,KAAK,SAASK,QAAS,kBAAMN,EAAgB,oBAA/E,sBAGJ,0BAAMnD,UAAU,eACd,yBAAKA,UAAU,cACb,2BAAOoD,KAAK,OAAOpD,UAAU,eAAekD,GAAG,eAAeU,mBAAiB,eAAeC,YAAY,kBAG9G,4BAAQ7D,UAAU,oBAAoBoD,KAAK,SAASK,QAAS,kBAxG3E,WACE,IAAIK,EAAmBC,SAASC,eAAe,gBAC/CnD,EAAcV,EAAG8D,MAAMH,EAAiB/C,OACxC+C,EAAiB/C,MAAQ,GACzB,IAAImD,EAAgB,GAEpB,OAAQvD,GACN,IAAK,OACHuD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAK7C,OAASV,KAC5D,MACF,IAAK,YACHqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAKxC,aAAef,KAClE,MACF,IAAK,WACHqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAKpC,YAAcnB,KACjE,MACF,IAAK,aACHqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAKhC,aAAevB,KAClE,MACF,IAAK,UACHqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAK5B,UAAY3B,KAC/D,MACF,IAAK,WACHqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAKxB,WAAa/B,KAChE,MACF,IAAK,iBACHqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAKpB,mBAAqBD,SAASlC,MACjF,MACF,QACEqD,EAAgB1D,EAAM2D,QAAO,SAAAC,GAAU,OAAOA,EAAKlB,KAAOH,SAASlC,MAIvEH,EAAewD,GAuEgEC,KAAnE,eAMV,yBAAKnE,UAAU,aACb,2BAAOA,UAAU,SACf,+BACE,4BACE,wBAAIqE,MAAM,OAAV,MACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,sBAGJ,+BACG5D,EAAY6D,KAAI,SAAAF,GAAI,OACnB,4BACE,wBAAIC,MAAM,OAAOD,EAAKlB,IACtB,4BAAI,yBAAKqB,IAAKH,EAAKI,WAAYC,IAAKL,EAAK7C,KAAMmD,OAAO,SACtD,4BAAKN,EAAK7C,MACV,4BAAK6C,EAAKxC,YACV,4BAAKwC,EAAKpC,WACV,4BAAKoC,EAAKhC,YACV,4BAAKgC,EAAK5B,SACV,4BAAK4B,EAAKxB,UACV,4BAAKwB,EAAKpB,2BC/QX2B,MATf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpB,SAASC,eAAe,SDyHpB,kBAAmBoB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,c","file":"static/js/main.c8d46af7.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\"\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\"\nimport \"./style.css\"\n\nfunction Jumbotron (props) {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4\">Maintenance Platoon User Directory</h1>\n      <p className=\"lead\">Select one or more of the options below to sort and/or filter the results</p>\n    </div>\n  )\n}\n\nexport default Jumbotron\n","import React, { useState } from \"react\"\nimport \"./style.css\"\nimport users from '../../users.json'\nconst to = require('to-case')\n\nfunction Table (props) {\n  const [usersSubset, setUsersSubset] = useState(users)\n  let sortColumn, filterColumn = 'id'\n  let sortOrder = 'asc'\n  let filterValue = ''\n\n  function setSortColumn (value) {\n    sortColumn = value\n    console.log(sortColumn)\n  }\n\n  function setSortOrder (value) {\n    sortOrder = value\n    console.log(sortOrder)\n  }\n\n  function compareRank (a, b) {\n    const rankA = a.rank\n    const rankB = b.rank\n    let comparison = 0\n    if (rankA > rankB) {\n      comparison = 1\n    } else if (rankA < rankB) {\n      comparison = -1\n    }\n    if (sortOrder === 'asc') return comparison\n    else if (sortOrder === 'desc') return comparison * -1\n  }\n\n  function compareFirstName (a, b) {\n    const firstNameA = a.first_name\n    const firstNameB = b.first_name\n    let comparison = 0\n    if (firstNameA > firstNameB) {\n      comparison = 1\n    } else if (firstNameA < firstNameB) {\n      comparison = -1\n    }\n    if (sortOrder === 'asc') return comparison\n    else if (sortOrder === 'desc') return comparison * -1\n  }\n\n  function compareLastName (a, b) {\n    const lastNameA = a.last_name\n    const lastNameB = b.last_name\n    let comparison = 0\n    if (lastNameA > lastNameB) {\n      comparison = 1\n    } else if (lastNameA < lastNameB) {\n      comparison = -1\n    }\n    if (sortOrder === 'asc') return comparison\n    else if (sortOrder === 'desc') return comparison * -1\n  }\n  \n  function compareOccupation (a, b) {\n    const occupationA = a.occupation\n    const occupationB = b.occupation\n    let comparison = 0\n    if (occupationA > occupationB) {\n      comparison = 1\n    } else if (occupationA < occupationB) {\n      comparison = -1\n    }\n    if (sortOrder === 'asc') return comparison\n    else if (sortOrder === 'desc') return comparison * -1\n  }\n\n  function compareSection (a, b) {\n    const sectionA = a.section\n    const sectionB = b.section\n    let comparison = 0\n    if (sectionA > sectionB) {\n      comparison = 1\n    } else if (sectionA < sectionB) {\n      comparison = -1\n    }\n    if (sortOrder === 'asc') return comparison\n    else if (sortOrder === 'desc') return comparison * -1\n  }\n\n  function comparePosition (a, b) {\n    const positionA = a.position\n    const positionB = b.position\n    let comparison = 0\n    if (positionA > positionB) {\n      comparison = 1\n    } else if (positionA < positionB) {\n      comparison = -1\n    }\n    if (sortOrder === 'asc') return comparison\n    else if (sortOrder === 'desc') return comparison * -1\n  }\n\n  function compareYearsOfService (a, b) {\n    if (sortOrder === 'asc') return parseInt(a.years_of_service) - parseInt(b.years_of_service)\n    else if (sortOrder === 'desc') return parseInt(b.years_of_service) - parseInt(a.years_of_service)\n  }\n\n  function compareId (a, b) {\n    if (sortOrder === 'asc') return parseInt(a.id) - parseInt(b.id)\n    else if (sortOrder === 'desc') return parseInt(b.id) - parseInt(a.id)\n  }\n\n  function sort () {\n    let sortedUsers = []\n\n    switch (sortColumn) {\n      case 'rank':\n        sortedUsers = users.sort(compareRank)\n        break\n      case 'firstName':\n        sortedUsers = users.sort(compareFirstName)\n        break\n      case 'lastName':\n        sortedUsers = users.sort(compareLastName)\n        break\n      case 'occupation':\n        sortedUsers = users.sort(compareOccupation)\n        break\n      case 'section':\n        sortedUsers = users.sort(compareSection)\n        break\n      case 'position':\n        sortedUsers = users.sort(comparePosition)\n        break\n      case 'yearsOfService':\n        sortedUsers = users.sort(compareYearsOfService)\n        break\n      default:\n        sortedUsers = users.sort(compareId)\n        break\n    }\n\n    // Test\n    console.log(sortedUsers)\n\n    setUsersSubset([...sortedUsers])\n  }\n\n  function setFilterColumn (value) {\n    filterColumn = value\n    console.log(filterColumn)\n  }\n\n  function filter () {\n    let filterValueInput = document.getElementById('filter-value')\n    filterValue = to.title(filterValueInput.value)\n    filterValueInput.value = ''\n    let filteredUsers = []\n\n    switch (filterColumn) {\n      case 'rank':\n        filteredUsers = users.filter(user => { return user.rank === filterValue })\n        break\n      case 'firstName':\n        filteredUsers = users.filter(user => { return user.first_name === filterValue })\n        break\n      case 'lastName':\n        filteredUsers = users.filter(user => { return user.last_name === filterValue })\n        break\n      case 'occupation':\n        filteredUsers = users.filter(user => { return user.occupation === filterValue })\n        break\n      case 'section':\n        filteredUsers = users.filter(user => { return user.section === filterValue })\n        break\n      case 'position':\n        filteredUsers = users.filter(user => { return user.position === filterValue })\n        break\n      case 'yearsOfService':\n        filteredUsers = users.filter(user => { return user.years_of_service === parseInt(filterValue) })\n        break\n      default:\n        filteredUsers = users.filter(user => { return user.id === parseInt(filterValue) })\n        break\n    }\n\n    setUsersSubset(filteredUsers)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <h4>Sort</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <div className=\"dropdown\">\n                  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Column\n                  </button>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('id')}>ID (Default)</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('rank')}>Rank</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('firstName')}>First Name</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('lastName')}>Last Name</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('occupation')}>Occupation</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('section')}>Section</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('position')}>Position</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortColumn('yearsOfService')}>Years of Service</button>\n                  </div>\n                </div>\n                <div className=\"dropdown\">\n                  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Order\n                  </button>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortOrder('asc')}>Ascending (Default)</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setSortOrder('desc')}>Descending</button>\n                  </div>\n                </div>\n                <button className=\"btn btn-secondary\" type=\"button\" onClick={() => sort()}>Sort</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm\">\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <h4>Filter</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <div className=\"dropdown\">\n                  <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Column\n                  </button>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('id')}>ID (Default)</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('rank')}>Rank</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('firstName')}>First Name</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('lastName')}>Last Name</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('occupation')}>Occupation</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('section')}>Section</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('position')}>Position</button>\n                    <button className=\"dropdown-item\" type=\"button\" onClick={() => setFilterColumn('yearsOfService')}>Years of Service</button>\n                  </div>\n                </div>\n                <form className=\"form-inline\">\n                  <div className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" id=\"filter-value\" aria-describedby=\"filter-value\" placeholder=\"Enter value\" />\n                  </div>\n                </form>\n                <button className=\"btn btn-secondary\" type=\"button\" onClick={() => filter()}>Filter</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Rank Badge</th>\n              <th scope=\"col\">Rank</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Occupation</th>\n              <th scope=\"col\">Section</th>\n              <th scope=\"col\">Position</th>\n              <th scope=\"col\">Years of Service</th>\n            </tr>\n          </thead>\n          <tbody>\n            {usersSubset.map(user => (\n              <tr>\n                <th scope=\"row\">{user.id}</th>\n                <td><img src={user.rank_badge} alt={user.rank} height=\"100\"></img></td>\n                <td>{user.rank}</td>\n                <td>{user.first_name}</td>\n                <td>{user.last_name}</td>\n                <td>{user.occupation}</td>\n                <td>{user.section}</td>\n                <td>{user.position}</td>\n                <td>{user.years_of_service}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default Table","import React from 'react';\nimport './App.css';\nimport Wrapper from './components/Wrapper'\nimport Jumbotron from './components/Jumbotron'\nimport Table from './components/Table'\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Jumbotron />\n      <Table />\n    </Wrapper>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}